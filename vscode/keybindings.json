// Place your key bindings in this file to override the defaults
[
    // {
    //     "key": "ctrl+h",
    //     "command": "workbench.action.focusPreviousGroup",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "ctrl+l",
    //     "command": "workbench.action.focusNextGroup",
    //     "when": "editorTextFocus"
    // },
     {
        "key": "Escape",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
      },
      {
        "key": "Escape",
        "command": "notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible && vim.active && vim.mode == 'Normal'"
      },
      {
        "key": "Home",
        "command": "extension.vim_home",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
      },
      {
        "key": "ctrl+home",
        "command": "extension.vim_ctrl+home",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
      },
      {
        "key": "End",
        "command": "extension.vim_end",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
      },
      {
        "key": "ctrl+end",
        "command": "extension.vim_ctrl+end",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
      },
      {
        "key": "Insert",
        "command": "extension.vim_insert",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
      },
      {
        "key": "Backspace",
        "command": "extension.vim_backspace",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
      },
      {
        "key": "Delete",
        "command": "extension.vim_delete",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
      },
      {
        "key": "tab",
        "command": "extension.vim_tab",
        "when": "editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"
      },
      {
        "key": "shift+tab",
        "command": "extension.vim_shift+tab",
        "when": "editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"
      },
      {
        "key": "left",
        "command": "extension.vim_left",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
      },
      {
        "key": "right",
        "command": "extension.vim_right",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
      },
      {
        "key": "up",
        "command": "extension.vim_up",
        "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"
      },
      {
        "key": "down",
        "command": "extension.vim_down",
        "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"
      },
      {
        "key": "g g",
        "command": "list.focusFirst",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "h",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "l",
        "command": "list.select",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "o",
        "command": "list.toggleExpand",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "/",
        "command": "list.toggleKeyboardNavigation",
        "when": "listFocus && !inputFocus && listSupportsKeyboardNavigation"
      },
      {
        "key": "ctrl+a",
        "command": "extension.vim_ctrl+a",
        "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
      },
      {
        "key": "ctrl+b",
        "command": "extension.vim_ctrl+b",
        "when": "editorTextFocus && vim.active && vim.use<C-b> && vim.mode != 'Insert' && !inDebugRepl"
      },
      {
        "key": "ctrl+c",
        "command": "extension.vim_ctrl+c",
        "when": "editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl && vim.overridecmdC"
      },
      {
        "key": "cmd+d",
        "command": "extension.vim_ctrl+d",
        "when": "editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"
      },
      {
        "key": "ctrl+d",
        "command": "list.focusPageDown",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "ctrl+e",
        "command": "extension.vim_ctrl+e",
        "when": "editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"
      },
      {
        "key": "cmd+f",
        "command": "extension.vim_ctrl+f",
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
      },
      {
        "key": "ctrl+g",
        "command": "extension.vim_ctrl+g",
        "when": "editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"
      },
      {
        "key": "ctrl+h",
        "command": "extension.vim_ctrl+h",
        "when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
      },
      {
        "key": "ctrl+i",
        "command": "extension.vim_ctrl+i",
        "when": "editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"
      },
      {
        "key": "ctrl+j",
        "command": "extension.vim_ctrl+j",
        "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
      },
      {
        "key": "ctrl+k",
        "command": "extension.vim_ctrl+k",
        "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
      },
      {
        "key": "ctrl+l",
        "command": "extension.vim_navigateCtrlL",
        "when": "editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"
      },
      {
        "key": "ctrl+m",
        "command": "extension.vim_ctrl+m",
        "when": "editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-m> && !inDebugRepl"
      },
      {
        "key": "ctrl+n",
        "command": "extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-n> && !inDebugRepl"
      },
      {
        "key": "ctrl+o",
        "command": "extension.vim_ctrl+o",
        "when": "editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"
      },
      {
        "key": "ctrl+p",
        "command": "extension.vim_ctrl+p",
        "when": "suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-p> && !inDebugRepl"
      },
      {
        "key": "ctrl+q",
        "command": "extension.vim_winCtrlQ",
        "when": "editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"
      },
      {
        "key": "ctrl+r",
        "command": "extension.vim_ctrl+r",
        "when": "editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"
      },
      {
        "key": "ctrl+t",
        "command": "extension.vim_ctrl+t",
        "when": "editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"
      },
      {
        "key": "ctrl+u",
        "command": "extension.vim_ctrl+u",
        "when": "editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"
      },
      {
        "key": "ctrl+u",
        "command": "list.focusPageUp",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "ctrl+v",
        "command": "extension.vim_ctrl+v",
        "when": "editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"
      },
      {
        "key": "ctrl+w",
        "command": "extension.vim_ctrl+w",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
      },
      {
        "key": "ctrl+x",
        "command": "extension.vim_ctrl+x",
        "when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"
      },
      {
        "key": "ctrl+y",
        "command": "extension.vim_ctrl+y",
        "when": "editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"
      },
      {
        "key": "ctrl+z",
        "command": "extension.vim_ctrl+z",
        "when": "editorTextFocus && vim.active && vim.use<C-z> && !inDebugRepl"
      },
      {
        "key": "ctrl+6",
        "command": "extension.vim_ctrl+6",
        "when": "editorTextFocus && vim.active && vim.use<C-6> && !inDebugRepl"
      },
      {
        "key": "ctrl+^",
        "command": "extension.vim_ctrl+^",
        "when": "editorTextFocus && vim.active && vim.use<C-^> && !inDebugRepl"
      },
      {
        "key": "ctrl+[",
        "command": "extension.vim_ctrl+[",
        "when": "editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"
      },
      {
        "key": "ctrl+]",
        "command": "extension.vim_ctrl+]",
        "when": "editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"
      },
      {
        "key": "ctrl+shift+2",
        "command": "extension.vim_ctrl+shift+2",
        "when": "editorTextFocus && vim.active && vim.use<C-shift+2>"
      },
      {
        "key": "ctrl+up",
        "command": "extension.vim_ctrl+up",
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"
      },
      {
        "key": "ctrl+down",
        "command": "extension.vim_ctrl+down",
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"
      },
      {
        "key": "ctrl+left",
        "command": "extension.vim_ctrl+left",
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"
      },
      {
        "key": "ctrl+right",
        "command": "extension.vim_ctrl+right",
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"
      },
      {
        // "key": "ctrl+pagedown",
        "command": "extension.vim_ctrl+pagedown",
        "when": "editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"
      },
      {
        "key": "ctrl+pageup",
        "command": "extension.vim_ctrl+pageup",
        "when": "editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"
      },
      {
        "key": "ctrl+space",
        "command": "extension.vim_ctrl+space",
        "when": "editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"
      },
      {
        "key": "shift+G",
        "command": "list.focusLast",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "ctrl+backspace",
        "command": "extension.vim_ctrl+backspace",
        "when": "editorTextFocus && vim.active && vim.use<C-BS> && vim.mode != 'Insert' && !inDebugRepl"
      },
      {
        "key": "shift+backspace",
        "command": "extension.vim_shift+backspace",
        "when": "editorTextFocus && vim.active && vim.use<S-BS> && vim.mode != 'Insert' && !inDebugRepl"
      },
      {
        "key": "ctrl+left",
        "command": "extension.vim_cmd+left",
        "when": "editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"
      },
      {
        "key": "ctrl+right",
        "command": "extension.vim_cmd+right",
        "when": "editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"
      },
      {
        "key": "ctrl+a",
        "command": "extension.vim_cmd+a",
        "when": "editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"
      },
      {
        "key": "ctrl+c",
        "command": "extension.vim_cmd+c",
        "when": "editorTextFocus && vim.active && vim.use<D-c> && vim.overrideCopy && !inDebugRepl"
      },
      {
        "key": "ctrl+v",
        "command": "extension.vim_cmd+v",
        "when": "editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'CommandlineInProgress' && !inDebugRepl || editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"
      },
      {
        "key": "ctrl+alt+down",
        "linux": "shift+alt+down",
        "mac": "cmd+alt+down",
        "command": "extension.vim_cmd+alt+down",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
      },
      {
        "key": "ctrl+alt+up",
        "linux": "shift+alt+up",
        "mac": "ctrl+alt+up",
        "command": "extension.vim_cmd+alt+up",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
      },
      {
        "key": "j",
        "command": "notebook.focusNextEditor",
        "when": "vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
      },
      {
        "key": "k",
        "command": "notebook.focusPreviousEditor",
        "when": "vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
      },
      {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
      },
      {
        "key": "ctrl+\\",
        "command": "-workbench.action.terminal.splitInstance",
        "when": "terminalProcessSupported && terminalTabsFocus"
      },
      {
        "key": "ctrl+\\",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
      },
      {
        "key": "ctrl+\\",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "sideBarFocus"
      },
      {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
      },
      {
        "key": "ctrl+0",
        "command": "-workbench.action.focusSideBar"
      },
      {
        "key": "ctrl+\\",
        "command": "workbench.action.focusSideBar",
        "when": "!sideBarFocus"
      },
      {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+k d",
        "command": "-workbench.files.action.compareWithSaved"
      },
      {
        "key": "ctrl+k ctrl+d",
        "command": "-editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+k ctrl+u",
        "command": "-editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
      },
      {
        "key": "ctrl+d",
        "command": "-extension.vim_cmd+d",
        "when": "editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"
      },
      {
        "key": "shift+7",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus && vim.mode == 'Normal'"
      },
      {
        "key": "shift+ctrl+\\",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
      },
      {
        "key": "shift+ctrl+c",
        "command": "editor.action.cancelSelectionAnchor",
        "when": "editorTextFocus && selectionAnchorSet"
      },
      {
        "key": "shift+ctrl+c",
        "command": "editor.closeTestPeek",
        "when": "testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek"
      },
      {
        "key": "escape",
        "command": "-editor.closeTestPeek",
        "when": "testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek"
      },
      {
        "key": "ctrl+c",
        "command": "-editor.action.clipboardCopyAction"
      },
      {
        "key": "shift+ctrl+c",
        "command": "editor.debug.action.closeExceptionWidget",
        "when": "exceptionWidgetVisible"
      },
      {
        "key": "shift+ctrl+c",
        "command": "workbench.action.hideInterfaceOverview",
        "when": "interfaceOverviewVisible"
      },
      {
        "key": "ctrl+c",
        "command": "notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
      },
      {
        "key": "ctrl+c",
        "command": "notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
      },
      {
        "key": "shift+ctrl+c",
        "command": "notifications.hideList",
        "when": "notificationCenterVisible"
      },
      {
        "key": "shift+ctrl+c",
        "command": "settings.action.clearSearchResults",
        "when": "inSettingsEditor && inSettingsSearch"
      },
      {
        "key": "shift+ctrl+c",
        "command": "settings.action.focusLevelUp",
        "when": "inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch"
      },
      {
        "key": "shift+ctrl+c",
        "command": "search.action.focusQueryEditorWidget",
        "when": "inSearchEditor"
      },
      {
        "key": "shift+ctrl+c",
        "command": "search.action.cancel",
        "when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
      },
      {
        "key": "shift+ctrl+c",
        "command": "inlayHints.stopReadingLineWithHint",
        "when": "isReadingLineWithInlayHints"
      },
      {
        "key": "shift+ctrl+c",
        "command": "workbench.action.terminal.clearSelection",
        "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocus && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
      },
      {
        "key": "ctrl+c",
        "command": "workbench.action.terminal.hideFind",
        "when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
      },
      {
        "key": "ctrl+c",
        "command": "breadcrumbs.selectEditor",
        "when": "breadcrumbsActive && breadcrumbsVisible"
      },
      {
        "key": "shift+ctrl+c",
        "command": "cancelLinkedEditingInput",
        "when": "LinkedEditingInputVisible && editorTextFocus"
      },
      {
        "key": "shift+ctrl+c",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible"
      },
      {
        "key": "shift+ctrl+c",
        "command": "cancelSelection",
        "when": "editorHasSelection && textInputFocus"
      },
      {
        "key": "ctrl+c",
        "command": "closeAccessibilityHelp",
        "when": "accessibilityHelpWidgetVisible && editorFocus"
      },
      {
        "key": "shift+ctrl+c",
        "command": "closeBreakpointWidget",
        "when": "breakpointWidgetVisible && textInputFocus"
      },
      {
        "key": "shift+ctrl+c",
        "command": "closeParameterHints",
        "when": "editorFocus && parameterHintsVisible"
      },
      {
        "key": "shift+ctrl+c",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible"
      },
      {
        "key": "shift+ctrl+c",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible && !isComposing"
      },
      {
        "key": "shift+ctrl+c",
        "command": "closeDirtyDiff",
        "when": "dirtyDiffVisible"
      },
      {
        "key": "ctrl+c",
        "command": "closeBreakpointWidget",
        "when": "breakpointWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+c",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
      },
      {
        "key": "ctrl+c",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
      },
      {
        "key": "shift+ctrl+c",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+c",
        "command": "keybindings.editor.clearSearchResults",
        "when": "inKeybindings && inKeybindingsSearch"
      },
      {
        "key": "ctrl+c",
        "command": "leaveEditorMessage",
        "when": "messageVisible"
      },
      {
        "key": "ctrl+c",
        "command": "leaveSnippet",
        "when": "editorTextFocus && inSnippetMode"
      },
      {
        "key": "ctrl+c",
        "command": "list.clear",
        "when": "listFocus && listHasSelectionOrFocus && !inputFocus"
      },
      {
        "key": "ctrl+c",
        "command": "notifications.hideToasts",
        "when": "notificationToastsVisible"
      },
      {
        "key": "ctrl+c",
        "command": "notifications.hideToasts",
        "when": "notificationFocus && notificationToastsVisible"
      },
      {
        "key": "ctrl+c",
        "command": "problems.action.clearFilterText",
        "when": "problemsFilterFocus"
      },
      {
        "key": "ctrl+c",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus"
      },
      {
        "key": "ctrl+c",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
      },
      {
        "key": "ctrl+c",
        "command": "workbench.action.hideComment",
        "when": "commentEditorFocused"
      },
      {
        "key": "ctrl+c",
        "command": "workbench.statusBar.clearFocus",
        "when": "statusBarFocused"
      },
      {
        "key": "ctrl+s",
        "command": "-workbench.action.files.save"
      },
      {
        "key": "ctrl+s",
        "command": "editor.action.inlineSuggest.trigger"
      },
      {
        "key": "shift+ctrl+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
      },
      {
        "key": "shift+ctrl+c",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek"
      },
      {
        "key": "ctrl+c",
        "command": "workbench.action.terminal.navigationModeExit",
        "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported"
      },
      {
        "key": "shift+ctrl+c",
        "command": "execCopy"
      },
      {
        "key": "ctrl+c",
        "command": "-execCopy"
      },
      {
        "key": "shift+ctrl+f12",
        "command": "-editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
      },
      {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpen"
      },
      {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
      },
      {
        "key": "shift+cmd+p",
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
      },
      {
        "key": "ctrl+p",
        "command": "-cursorUp",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+p",
        "command": "-list.focusUp",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "ctrl+p",
        "command": "-selectPrevCodeAction",
        "when": "codeActionMenuVisible"
      },
      {
        "key": "ctrl+p",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
      },
      {
        "key": "ctrl+p",
        "command": "-showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
      },
      {
        "key": "ctrl+shift+p",
        "command": "workbench.action.showCommands"
      },
      {
        "key": "shift+cmd+p",
        "command": "-workbench.action.showCommands"
      },
      {
        "key": "shift+cmd+f",
        "command": "workbench.action.findInFiles"
      },
      {
        "key": "shift+cmd+f",
        "command": "-workbench.action.findInFiles"
      },
      {
        "key": "shift+cmd+f",
        "command": "workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
      },
      {
        "key": "shift+cmd+f",
        "command": "-workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
      },
      {
        "key": "shift+cmd+f",
        "command": "workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
      },
      {
        "key": "shift+cmd+f",
        "command": "-workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
      },
      {
        "key": "cmd+f",
        "command": "cursorRight",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+f",
        "command": "-cursorRight",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+f",
        "command": "-extension.vim_ctrl+f",
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
      }
]
