###############################
########### General ###########
###############################

alias pls='sudo $(fc -ln -1)'

alias java-kill='fuser -k 8080/tcp'

alias ll='ls -alF'
alias la='ls -A'

alias sbp='source $HOME/.bash_profile'
alias szrc='source $HOME/.zshrc'

# Ant
alias aa='ant all'
alias ad='ant deploy'
alias acd='ant clean deploy'

# Git
alias g='git'
alias ga='g add'
alias gc='git checkout'
alias gca='g commit --amend'
alias gcb='git checkout -b'
alias gcm='g commit -m'
alias gpr='git pull --rebase'
alias gpr-main='gpr upstream main'
alias gprm='gpr-main'
alias gs='git status'
alias get_git_branch='git rev-parse --abbrev-ref HEAD'
alias ggb='get_git_branch'
alias glonm='glo --no-merges'
# alias gsync='git pull --rebase upstream $(current_branch) && git push origin $(current_branch)'

# ghpr
# alias ghpr='create-pr'

# Gradle
alias gradle-fs='gradle wrapper --gradle-version 6.6.1 && gradle formatSource'

# Gradlew from any level
function gw {
  local root_level=$(git rev-parse --show-toplevel 2>/dev/null)

  if [[ -n "$root_level" && -f "$root_level/gradlew" ]]; then
    root_level="$root_level/gradlew"
  else
    root_level=$(which gradlew)
  fi

  "$root_level" $@
}

# Npm
alias nrb='npm run build'
alias nrf='npm run format'
alias nrl='npm run lint'
alias nrs='npm run start'
alias nrt='npm run test:dev'
alias nrtc='npm run test:dev -- --coverage'
alias nrtu='npm run test:dev -- -u'
alias nrtw='npm run test:dev -- --watch'
alias nrtwa='npm run test:dev -- --watchAll'
alias nrw='npm run watch'

# Yarn
alias yrb='yarn run build'
alias yrf='yarn run format'
alias yrl='yarn run lint'
alias yrs='yarn run start'
alias yrt='yarn run test:dev'
alias yrtc='yarn run test:dev -- --coverage'
alias yrtu='yarn run test:dev -- -u'
alias yrtw='yarn run test:dev -- --watch'
alias yrtwa='yarn run test:dev -- --watchAll'
alias yrw='yarn run watch'

function gpub() {
  local BRANCH_NAME="$1"

  if [[ -z $1 ]]; then
    BRANCH_NAME="$(git rev-parse --abbrev-ref HEAD)"

    echo "Using $BRANCH_NAME as branch name."
  elif [[ $1 == "main" || $1 == "master" ]]; then
    echo "Cannot push to $1."

    return 1
  fi

  gpu "$BRANCH_NAME"
}

function gpuf() {
  local BRANCH_NAME="$1"

  if [[ -z $1 ]]; then
    BRANCH_NAME="$(git rev-parse --abbrev-ref HEAD)"

    echo "Using $BRANCH_NAME as branch name."
  elif [[ $1 == "main" || $1 == "master" ]]; then
    echo "Cannot push to $1."

    return 1
  fi

  gpu "$BRANCH_NAME" --force-with-lease
}

# Cherry pick the commits that differ between the source & target branch
function git-cherry-pick-diff() {
   local SOURCE_NAME=${1}
   local TARGET_BRANCH=${2:-main}

   git cherry-pick $(git rev-list --abbrev-commit ${TARGET_BRANCH}..${SOURCE_NAME})
 }

alias gcpd='git-cherry-pick-diff'
